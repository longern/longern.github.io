{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/components/MiniMnist.vue?2955","webpack:///./src/components/MiniMnist.vue?3e66","webpack:///src/components/MiniMnist.vue","webpack:///./src/components/MiniMnist.vue?fc59","webpack:///./src/components/MiniMnist.vue","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","d","__webpack_exports__","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","push","length","_nonIterableRest","TypeError","_slicedToArray","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MiniMnist_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MiniMnist_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","id","width","height","on","mousedown","handleDrawMouseDown","mousemove","handleDrawMouseMove","mouseup","handleDrawMouseUp","mouseout","click","handleClear","_v","answer","staticRenderFns","MiniMnistvue_type_script_lang_js_","name","data","model","drawing","lastMousePos","x","y","methods","event","offsetX","offsetY","ctx","$refs","mnistDraw","getContext","lineWidth","lineCap","lineJoin","beginPath","moveTo","lineTo","stroke","centerImage","img","meanX","meanY","rows","columns","sumPixels","pixel","dY","Math","round","dX","transX","transY","getBoundingRectangle","threshold","minX","minY","maxX","maxY","imageDataToGrayscale","imgData","grayscaleImg","offset","alpha","getImageData","boundingRectangle","trans","canvasCopy","document","createElement","copyCtx","brW","brH","scaling","max","translate","scale","drawImage","canvas","hiddenCtx","mnistHidden","clearRect","makePrediction","_makePrediction","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","alphaChannel","prediction","answerData","_answerData","wrap","_context","prev","external_tf_","asType","slice","expandDims","predict","squeeze","sent","slicedToArray","stop","created","_created","_callee2","_context2","components_MiniMnistvue_type_script_lang_js_","component","componentNormalizer","options","__file","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","exports","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","keys","object","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","rootEntry","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","obj","invoke","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegateResult","maybeInvokeDelegate","return","pushTryEntry","locs","iteratorMethod","Function"],"mappings":"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","file":"js/chunk-4950cb33.506ff93b.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiniMnist.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiniMnist.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mini-mnist\"},[_c('canvas',{ref:\"mnistDraw\",attrs:{\"id\":\"mnist-draw\",\"width\":\"280\",\"height\":\"280\"},on:{\"mousedown\":_vm.handleDrawMouseDown,\"mousemove\":_vm.handleDrawMouseMove,\"mouseup\":_vm.handleDrawMouseUp,\"mouseout\":_vm.handleDrawMouseUp}}),_c('canvas',{ref:\"mnistHidden\",attrs:{\"id\":\"mnist-hidden\",\"width\":\"28\",\"height\":\"28\"}}),_c('div',[_c('button',{on:{\"click\":_vm.handleClear}},[_vm._v(\"Clear\")])]),_c('div',[_vm._v(\"\\n    \"+_vm._s(_vm.answer)+\"\\n  \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"mini-mnist\">\r\n    <canvas\r\n      id=\"mnist-draw\"\r\n      ref=\"mnistDraw\"\r\n      width=\"280\"\r\n      height=\"280\"\r\n      @mousedown=\"handleDrawMouseDown\"\r\n      @mousemove=\"handleDrawMouseMove\"\r\n      @mouseup=\"handleDrawMouseUp\"\r\n      @mouseout=\"handleDrawMouseUp\"\r\n    />\r\n    <canvas\r\n      id=\"mnist-hidden\"\r\n      ref=\"mnistHidden\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    />\r\n    <div>\r\n      <button @click=\"handleClear\">Clear</button>\r\n    </div>\r\n    <div>\r\n      {{ answer }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nexport default {\r\n  name: 'MiniMnist',\r\n  data() {\r\n    return {\r\n      model: null,\r\n      drawing: false,\r\n      lastMousePos: {\r\n        x: 0,\r\n        y: 0,\r\n      },\r\n      answer: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    handleDrawMouseDown(event) {\r\n      this.drawing = true;\r\n      this.lastMousePos.x = event.offsetX;\r\n      this.lastMousePos.y = event.offsetY;\r\n\r\n      const ctx = this.$refs.mnistDraw.getContext(\"2d\");\r\n      ctx.lineWidth = 15;\r\n      ctx.lineCap=\"round\";\r\n      ctx.lineJoin = \"round\";\r\n      ctx.beginPath();\r\n    },\r\n\r\n    handleDrawMouseMove(event) {\r\n      if (!this.drawing) {\r\n        return;\r\n      }\r\n\r\n      const ctx = this.$refs.mnistDraw.getContext(\"2d\");\r\n      ctx.moveTo(this.lastMousePos.x, this.lastMousePos.y);\r\n      ctx.lineTo(event.offsetX, event.offsetY);\r\n      ctx.stroke();\r\n\r\n      this.lastMousePos.x = event.offsetX;\r\n      this.lastMousePos.y = event.offsetY;\r\n    },\r\n      // computes center of mass of digit, for centering\r\n      // note 1 stands for black (0 white) so we have to invert.\r\n      centerImage(img) {\r\n        var meanX = 0;\r\n        var meanY = 0;\r\n        var rows = img.length;\r\n        var columns = img[0].length;\r\n        var sumPixels = 0;\r\n        for (var y = 0; y < rows; y++) {\r\n          for (var x = 0; x < columns; x++) {\r\n            var pixel = (1 - img[y][x]);\r\n            sumPixels += pixel;\r\n            meanY += y * pixel;\r\n            meanX += x * pixel;\r\n          }\r\n        }\r\n        meanX /= sumPixels;\r\n        meanY /= sumPixels;\r\n        \r\n        var dY = Math.round(rows/2 - meanY);\r\n        var dX = Math.round(columns/2 - meanX);\r\n        return {transX: dX, transY: dY};\r\n      },\r\n\r\n      // given grayscale image, find bounding rectangle of digit defined\r\n      // by above-threshold surrounding\r\n      getBoundingRectangle(img, threshold) {\r\n        var rows = img.length;\r\n        var columns = img[0].length;\r\n        var minX=columns;\r\n        var minY=rows;\r\n        var maxX=-1;\r\n        var maxY=-1;\r\n        for (var y = 0; y < rows; y++) {\r\n          for (var x = 0; x < columns; x++) {\r\n            if (img[y][x] < threshold) {\r\n              if (minX > x) minX = x;\r\n              if (maxX < x) maxX = x;\r\n              if (minY > y) minY = y;\r\n              if (maxY < y) maxY = y;\r\n            }\r\n          }\r\n        }\r\n        return { minY: minY, minX: minX, maxY: maxY, maxX: maxX};\r\n      },\r\n\r\n      // take canvas image and convert to grayscale. Mainly because my\r\n      // own functions operate easier on grayscale, but some stuff like\r\n      // resizing and translating is better done with the canvas functions\r\n      imageDataToGrayscale(imgData) {\r\n        var grayscaleImg = [];\r\n        for (var y = 0; y < imgData.height; y++) {\r\n          grayscaleImg[y]=[];\r\n          for (var x = 0; x < imgData.width; x++) {\r\n            var offset = y * 4 * imgData.width + 4 * x;\r\n            var alpha = imgData.data[offset+3];\r\n            // weird: when painting with stroke, alpha == 0 means white;\r\n            // alpha > 0 is a grayscale value; in that case I simply take the R value\r\n            if (alpha == 0) {\r\n              imgData.data[offset] = 255;\r\n              imgData.data[offset+1] = 255;\r\n              imgData.data[offset+2] = 255;\r\n            }\r\n            imgData.data[offset+3] = 255;\r\n            // simply take red channel value. Not correct, but works for\r\n            // black or white images.\r\n            grayscaleImg[y][x] = imgData.data[y*4*imgData.width + x*4 + 0] / 255;\r\n          }\r\n        }\r\n        return grayscaleImg;\r\n      },\r\n\r\n    handleDrawMouseUp() {\r\n      if (!this.drawing) {\r\n        return;\r\n      }\r\n\r\n      this.drawing = false;\r\n\r\n      const ctx = this.$refs.mnistDraw.getContext(\"2d\");\r\n      // convert RGBA image to a grayscale array, then compute bounding rectangle and center of mass  \r\n      var imgData = ctx.getImageData(0, 0, 280, 280);\r\n      var grayscaleImg = this.imageDataToGrayscale(imgData);\r\n      var boundingRectangle = this.getBoundingRectangle(grayscaleImg, 0.01);\r\n      var trans = this.centerImage(grayscaleImg); // [dX, dY] to center of mass\r\n      \r\n      // copy image to hidden canvas, translate to center-of-mass, then\r\n      // scale to fit into a 200x200 box (see MNIST calibration notes on\r\n      // Yann LeCun's website)\r\n      var canvasCopy = document.createElement(\"canvas\");\r\n      canvasCopy.width = imgData.width;\r\n      canvasCopy.height = imgData.height;\r\n      var copyCtx = canvasCopy.getContext(\"2d\");\r\n      var brW = boundingRectangle.maxX + 1 - boundingRectangle.minX;\r\n      var brH = boundingRectangle.maxY + 1 - boundingRectangle.minY;\r\n      var scaling = 190 / Math.max(brW, brH);\r\n      // scale\r\n      copyCtx.translate(this.$refs.mnistDraw.width / 2, this.$refs.mnistDraw.height / 2);\r\n      copyCtx.scale(scaling, scaling);\r\n      copyCtx.translate(-this.$refs.mnistDraw.width / 2, -this.$refs.mnistDraw.height / 2);\r\n      // translate to center of mass\r\n      copyCtx.translate(trans.transX, trans.transY);\r\n      copyCtx.drawImage(ctx.canvas, 0, 0);\r\n      \r\n      const hiddenCtx = this.$refs.mnistHidden.getContext(\"2d\");\r\n      hiddenCtx.clearRect(0, 0, 28, 28);\r\n      hiddenCtx.drawImage(canvasCopy, 0, 0, 28, 28);\r\n\r\n      this.makePrediction();\r\n    },\r\n\r\n    handleClear() {\r\n      const ctx = this.$refs.mnistDraw.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, 300, 300);\r\n      this.answer = null;\r\n    },\r\n\r\n    async makePrediction() {\r\n      const imgData = tf.div(tf.fromPixels(this.$refs.mnistHidden, 4).asType('float32'), 255.);\r\n      const alphaChannel = imgData.slice([0, 0, 3], [28, 28, 1]).expandDims();\r\n      const prediction = this.model.predict(alphaChannel);\r\n      const answer = tf.argMax(prediction.squeeze());\r\n      const answerData = await answer.data();\r\n      [this.answer] = answerData;\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.model = await tf.loadModel('models/mnist/model.json');\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#mnist-draw {\r\n  border: 1px solid black;\r\n}\r\n\r\n#mnist-hidden {\r\n  display: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiniMnist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiniMnist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MiniMnist.vue?vue&type=template&id=229e4dc5&\"\nimport script from \"./MiniMnist.vue?vue&type=script&lang=js&\"\nexport * from \"./MiniMnist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MiniMnist.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"MiniMnist.vue\"\nexport default component.exports","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n"],"sourceRoot":""}